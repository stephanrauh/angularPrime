= pui-password widget
:imagesdir: /angularPrime/demo
:iconsdir: /angularPrime/demo/icons
:icons: true
:source-highlighter: highlightjs

== Description

For the password type, the widgets adds a panel where the strength of the password is indicated.

== Usage

=== Attribute

Add the attribute pui-input to a standard HTML input element with type 'password'.

[source,xml]
----
<input id="default" type="password" pui-input ng-model="value"/>
----

=== Element

You can also use pui-input as element. The configuration of the widget is then defined with the +pui-binding+ attribute.

[source,xml]
----
<pui-input id="default" type="password" ng-model="value"></pui-input>
----

== Configuration

[cols="4*", options="header"]
|===
|Name
|Type
|Default
|Description

|inline
|boolean
|false
|Inline mode displays suggestions panel next to the field, not in a popup.

|noPasswordStrength image:0.6.png[0.6]
|boolean
|false
|When true, fields behaves as a regular input field.

|promptLabel
|string
|Please enter a password
|Text to prompt password entry.

|weakLabel
|string
|Weak
|Text for a weak password.

|mediumLabel
|string
|Medium
|Text for a medium password.

|strongLabel
|string
|Strong
|Text for a strong password.
|===

== Use cases

=== Default usage

For the default usage, there is no configuration required. You can just add the +pui-input+ attribute to a standard HTML input element where you have specified the type as +password+.

The +ng-model+ AngularJS attribute is needed when you want to use the value entered in the field in some controller code.

=== Change panel location

By default, the panel which gives the user feedback about the password, is shown as a popup, after the field.  You can change this to +inline+ style, by setting the configuration option +inline+ to true.

This can be done by an inline configuration object

[source,xml]
----
<pui-input id="default" type="password" ng-model="value" pui-binding="{{ 'inline': true}}"></pui-input>
----

Another alternative, is referring to a JavaScript object in the AngularJS scope.

[source,xml]
----
<pui-input id="inline" type="password" ng-model="value" pui-binding="inlineOption"></pui-input>
----

[source,javaScript]
----
$scope.inlineOption = {
  inline: true
}
----

=== No feedback

The feedback panel is great when the user needs to enter a new password.  he gets feedback about the strength of the entered characters.
But in the case where the user needs to enter his password for authentication, the feedback is not required.  By setting the +noPasswordStrength+ option to true, there will be no feedback.
It can specified again by using an inline configuration of referring to an AngularJS scoped object.

[source,html]
----
<pui-input id="noFeedback" type="password" ng-model="value" pui-binding="{{ 'noPasswordStrength': true}}"></pui-input>
----

=== Custom messages.

The text shown in the feedback panel can be customized. The configuration options +promptLabel+, +weakLabel+, +mediumLabel+ and +strongLabel+ can be used for this purpose.

[source,xml]
----
<pui-input id="msg" type="password" ng-model="value" pui-binding="customMessages"></pui-input>
----

[source,javaScript]
----
$scope.customMessages = {
 promptLabel: 'Password is required',
 weakLabel: 'Easy to crack, try harder',
 mediumLabel: 'Almost good, try special chars',
 strongLabel: 'That's how I like them'
}
----

== Good to know

IMPORTANT: No dynamic configuration

When the configuration options are retrieved from the AngularJS scoped object, there is no update done by the widget when the configuration values are changed.



